version: '3.5'

services:

  postgres:
    image: postgres:10.4
    volumes:
      - dapp-postgres-data-volume:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      DB_NAME: eosgreetings
      DB_USER: user
      DB_PASSWORD: pass
      POSTGRES_DB: eosgreetings

  pgweb:
    image: sosedoff/pgweb:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      DATABASE_URL: postgres://user:pass@postgres:5432/eosgreetings?sslmode=disable
    depends_on:
      - postgres

  demux:
    build:
      context: ./services/demux
      dockerfile: ./Dockerfile
      args:
        SERVICE: 'demux'
    image: eosgreetings/demux
    volumes:
      - ./services/demux:/opt/application  # mount demux service folder
      - /opt/application/node_modules # prevents host/container conflicts
    depends_on:
      - postgres
    environment:
      DB_USER: user
      DB_PASSWORD: pass
      DB_PORT: 5432
      DB_NAME: eosgreetings
      DB_HOST: postgres
      DB_SCHEMA: public
      CHAIN_HOST: 'http://eosio:8888'
      CHAIN_INIT_BLOCK: 10
      MONGO_URI: 'mongodb://mongo:27017'
      MONGO_DB: EOSFN
      WAIT_HOSTS: postgres:5432, mongo:27017
      WAIT_HOSTS_TIMEOUT: 60
    ports:
      - '3030:3030'
    networks:
      default:
      eoslocal:

  hasura:
    image: hasura/graphql-engine:v1.0.0-alpha34
    ports:
    - '8088:8080'
    depends_on:
    - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://user:pass@postgres:5432/eosgreetings?sslmode=disable
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
    volumes:
      - ./services/hasura/migrations:/hasura-migrations  #  mount hasura migrations folder
    command:
      - graphql-engine
      - serve
      - --enable-console

volumes:
  dapp-postgres-data-volume:

networks:
  default:
    name: eosgreetings
  eoslocal:
    external: true

